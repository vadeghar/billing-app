server.port=8090

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:mysql://billing-app.czvb5ozlnzwp.us-east-1.rds.amazonaws.com:3306/billingapp?useSSL=false
spring.datasource.username=root
spring.datasource.password=password

######## Amazon AWS ########
#spring.datasource.url=jdbc:mysql://billingsoftware.clytvayxn0sa.us-east-2.rds.amazonaws.com:3306/billingsoftware?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=vadeghar1

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.use_sql_comments=true
#spring.jpa.properties.hibernate.format_sql=true

#spring.jpa.properties.hibernate.type=trace 

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 

spring.jackson.serialization.fail-on-empty-beans=false


spring.loadAllBrands=false
spring.default.brandId=1

server.error.whitelabel.enabled=false

spring.queries.users-query=select email, password, 1 as active from users where email=?
spring.queries.roles-query=select u.email, r.role from users u inner join user_role ur on(u.id=ur.user_id) inner join role r on(ur.role_id=r.id) where u.email=?